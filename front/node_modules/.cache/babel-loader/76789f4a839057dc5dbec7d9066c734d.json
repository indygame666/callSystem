{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\routes.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ClientPage } from './pages/ClientPage';\nimport { AuthPage } from './pages/AuthPage';\nimport { RegisterPage } from './pages/RegisterPage';\nimport { useAuth } from './hooks/auth.hook';\nimport { AuthContext } from './context/AuthContext';\nimport { AdminAuthPage } from './pages/AdminAuthPage';\nimport { AdminPage } from './pages/AdminPage';\n\nconst jwt = require('jsonwebtoken');\n\nexport const useRoutes = isAuthenticated => {\n  if (isAuthenticated) {\n    /*  if (decoded == 'client')\r\n      {\r\n      return (\r\n          <Switch>\r\n          <Route path = \"/clientPage\" exact>\r\n              <ClientPage/>\r\n          </Route>\r\n            <Redirect to=\"/clientPage\" />\r\n          </Switch>\r\n          )\r\n      }\r\n        if (decoded == 'admin')\r\n      {\r\n          return (\r\n              <Switch>\r\n              <Route path = \"/adminPage\" exact>\r\n                  <AdminPage/>\r\n              </Route>\r\n                    <Redirect to=\"/adminPage\" />\r\n              </Switch>\r\n              )\r\n      } */\n    {\n      return /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/clientPage\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ClientPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/clientPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AuthPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RegisterPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdminAuthPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/routes.js"],"names":["React","Switch","Route","Redirect","ClientPage","AuthPage","RegisterPage","useAuth","AuthContext","AdminAuthPage","AdminPage","jwt","require","useRoutes","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAsBC,QAAtB,QAAqC,kBAArC;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAIA,OAAO,MAAMC,SAAS,GAAIC,eAAD,IAAqB;AAE1C,MAAIA,eAAJ,EAAoB;AAElB;;;;;;;;;;;;;;;;;;;;;;AA0BE;AACI,0BACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,aAAd;AAA4B,QAAA,KAAK,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA,eAKA,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CADJ;AASC;AAGR;;AAED,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,QAAb;AAAsB,IAAA,KAAK,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAKA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,WAAd;AAA0B,IAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALA,eASA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,QAAb;AAAsB,IAAA,KAAK,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATA,eAaA,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,CADJ;AAkBH,CA/DM","sourcesContent":["import React from 'react'\r\nimport {Switch,Route, Redirect} from 'react-router-dom'\r\nimport {ClientPage} from './pages/ClientPage'\r\nimport { AuthPage } from './pages/AuthPage'\r\nimport { RegisterPage } from './pages/RegisterPage'\r\nimport { useAuth } from './hooks/auth.hook'\r\nimport { AuthContext} from './context/AuthContext'\r\nimport { AdminAuthPage } from './pages/AdminAuthPage'\r\nimport {AdminPage} from './pages/AdminPage'\r\nconst jwt = require('jsonwebtoken')\r\n\r\n\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n\r\n    if (isAuthenticated){\r\n\r\n      /*  if (decoded == 'client')\r\n        {\r\n        return (\r\n            <Switch>\r\n            <Route path = \"/clientPage\" exact>\r\n                <ClientPage/>\r\n            </Route>\r\n\r\n            <Redirect to=\"/clientPage\" />\r\n            </Switch>\r\n            )\r\n        }\r\n\r\n        if (decoded == 'admin')\r\n        {\r\n            return (\r\n                <Switch>\r\n                <Route path = \"/adminPage\" exact>\r\n                    <AdminPage/>\r\n                </Route>\r\n    \r\n                <Redirect to=\"/adminPage\" />\r\n                </Switch>\r\n                )\r\n        } */\r\n\r\n        {\r\n            return (\r\n                <Switch>\r\n                <Route path = \"/clientPage\" exact>\r\n                    <ClientPage/>\r\n                </Route>\r\n    \r\n                <Redirect to=\"/clientPage\" />\r\n                </Switch>\r\n                )\r\n            }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n        <Route path =\"/login\" exact>\r\n            <AuthPage />\r\n        </Route>\r\n\r\n        <Route path = \"/register\" exact>\r\n            <RegisterPage />\r\n        </Route>\r\n\r\n        <Route path =\"/admin\" exact>\r\n            <AdminAuthPage/>\r\n        </Route>\r\n\r\n        <Redirect to=\"/login\"/>\r\n        </Switch>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n      setStatus(request.status);\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Ошибка, попробуйте ещё раз');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/hooks/http.hooks.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","status","setStatus","request","url","method","body","headers","JSON","stringify","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAEzB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,IAAD,CAAnC;AAGA,QAAMS,OAAO,GAAGR,WAAW,CAAE,OAAOS,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACpFT,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACC,QAAG;AAEC,UAAIQ,IAAJ,EAAS;AACLA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACH;;AAEF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAcC,QAAAA;AAAd,OAAN,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAX,MAAAA,SAAS,CAACC,OAAO,CAACF,MAAT,CAAT;;AAEA,UAAI,CAACS,QAAQ,CAACI,EAAd,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,4BAA1B,CAAN;AACH;;AAEDlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOc,IAAP;AAEF,KAnBD,CAmBE,OAAMK,CAAN,EAAS;AACPnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACiB,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACH;AAEJ,GA3B0B,EA2BzB,EA3ByB,CAA3B;AA6BA,QAAMC,UAAU,GAAGvB,WAAW,CAAE,MAAMK,QAAQ,CAAC,IAAD,CAAhB,EAAuB,EAAvB,CAA9B;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWM,IAAAA,OAAX;AAAmBJ,IAAAA,KAAnB;AAAyBmB,IAAAA;AAAzB,GAAP;AACH,CAvCM","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n \r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n    const [status,setStatus] = useState(null)\r\n    \r\n    \r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n       setLoading(true)\r\n        try{\r\n\r\n            if (body){\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n           const response = await fetch(url, {method, body,headers})\r\n           const data = await response.json()\r\n           setStatus(request.status)\r\n\r\n           if (!response.ok){\r\n               throw new Error(data.message || 'Ошибка, попробуйте ещё раз')\r\n           }\r\n\r\n           setLoading(false)\r\n\r\n           return data\r\n\r\n        } catch(e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n\r\n    },[])\r\n\r\n    const clearError = useCallback( () => setError(null),[])\r\n\r\n    return { loading, request,error,clearError}\r\n}"]},"metadata":{},"sourceType":"module"}
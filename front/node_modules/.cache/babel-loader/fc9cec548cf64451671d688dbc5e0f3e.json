{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\pages\\\\ClientPage.js\";\nimport React, { useContext, useState, useCallback, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hooks';\nimport { get } from 'mongoose';\nimport { Loader } from '../components/Loader';\nimport { CardPage } from '../components/CardPage';\nexport const ClientPage = () => {\n  const [user, setUser] = useState(null);\n  const [name, setName] = useState('');\n  const [notification, setNotification] = useState('');\n  const auth = useContext(AuthContext);\n  const {\n    loading,\n    request\n  } = useHttp();\n\n  const notificationHandler = async () => {\n    try {//  const user = await request('api/data/generate', 'POST',{ } , { Authorization: 'Bearer ${auth.token}'}) // ???\n    } catch (e) {}\n  };\n\n  const getUser = useCallback(async () => {\n    try {\n      const data = await request(`/api/data/getData/${auth.userId}`, 'GET', null, {\n        Authorization: `Bearer ${auth.token}`\n      }); // setUser(data)\n    } catch (e) {}\n  }, [auth.token, auth.userId, request]);\n  useEffect(() => {\n    if (auth != null) {\n      getUser();\n    }\n  }, [getUser]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, !loading && user && /*#__PURE__*/React.createElement(CardPage, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"waves-effect waves-light btn\",\n    disabled: loading,\n    onClick: notificationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\"));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/pages/ClientPage.js"],"names":["React","useContext","useState","useCallback","useEffect","AuthContext","useHttp","get","Loader","CardPage","ClientPage","user","setUser","name","setName","notification","setNotification","auth","loading","request","notificationHandler","e","getUser","data","userId","Authorization","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,WAAtC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACa,YAAD,EAAcC,eAAd,IAAiCd,QAAQ,CAAC,EAAD,CAA/C;AAEA,QAAMe,IAAI,GAAGhB,UAAU,CAACI,WAAD,CAAvB;AACA,QAAM;AAACa,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBb,OAAO,EAAlC;;AAEA,QAAMc,mBAAmB,GAAG,YAAU;AAClC,QAAG,CACD;AACD,KAFD,CAEE,OAAMC,CAAN,EAAS,CAEV;AACJ,GAND;;AAQA,QAAMC,OAAO,GAAGnB,WAAW,CAAE,YAAY;AACrC,QAAG;AACD,YAAMoB,IAAI,GAAG,MAAMJ,OAAO,CAAE,qBAAoBF,IAAI,CAACO,MAAO,EAAlC,EAAoC,KAApC,EAA0C,IAA1C,EAA+C;AACnEC,QAAAA,aAAa,EAAG,UAASR,IAAI,CAACS,KAAM;AAD+B,OAA/C,CAA1B,CADC,CAIC;AAEH,KAND,CAMC,OAAML,CAAN,EAAQ,CACR;AAEJ,GAV0B,EAUxB,CAACJ,IAAI,CAACS,KAAN,EAAYT,IAAI,CAACO,MAAjB,EAAyBL,OAAzB,CAVwB,CAA3B;AAYAf,EAAAA,SAAS,CAAE,MAAM;AACb,QAAIa,IAAI,IAAI,IAAZ,EACA;AACAK,MAAAA,OAAO;AACN;AACJ,GALQ,EAKN,CAACA,OAAD,CALM,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACJ,OAAD,IAAYP,IAAZ,iBAAoB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAGA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,eAEA;AAAQ,IAAA,SAAS,EAAC,8BAAlB;AACA,IAAA,QAAQ,EAAIO,OADZ;AAEA,IAAA,OAAO,EAAEE,mBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAFA,CADJ;AAYH,CA/CM","sourcesContent":["import React, { useContext, useState, useCallback, useEffect } from 'react'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { get } from 'mongoose'\r\nimport { Loader } from '../components/Loader'\r\nimport { CardPage } from '../components/CardPage'\r\n\r\n\r\nexport const ClientPage = () => {\r\n    const [user,setUser] = useState(null)\r\n    const [name,setName] = useState('')\r\n    const [notification,setNotification] = useState('')     \r\n    \r\n    const auth = useContext(AuthContext)\r\n    const {loading, request} = useHttp() \r\n\r\n    const notificationHandler = async() =>{\r\n        try{\r\n          //  const user = await request('api/data/generate', 'POST',{ } , { Authorization: 'Bearer ${auth.token}'}) // ???\r\n        } catch(e) {\r\n\r\n        }\r\n    } \r\n\r\n    const getUser = useCallback( async () => {\r\n        try{\r\n          const data = await request(`/api/data/getData/${auth.userId}`,'GET',null,{ \r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            // setUser(data)\r\n\r\n        }catch(e){\r\n        }\r\n      \r\n    }, [auth.token,auth.userId, request])\r\n\r\n    useEffect( () => {\r\n        if (auth != null)\r\n        {\r\n        getUser()\r\n        }\r\n    }, [getUser])    \r\n\r\n    return(\r\n        <div>\r\n        { !loading && user && <CardPage user= {user} />}\r\n        <button className=\"waves-effect waves-light btn\"\r\n        disabled = {loading}\r\n        onClick={notificationHandler}\r\n        >\r\n        Запросить помощь\r\n        </button> \r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\components\\\\EditField.js\";\nimport React, { useState, useRef } from 'react';\nimport { useHttp } from '../hooks/http.hooks';\nexport const EditField = ({\n  user\n}) => {\n  const {\n    loading\n  } = useHttp();\n  const name = user[Object.keys(user)[1]];\n  const password = user[Object.keys(user)[2]];\n  const wardNumber = user[Object.keys(user)[3]];\n  const gender = user[Object.keys(user)[4]];\n  const diagnoses = user[Object.keys(user)[5]];\n  const treatment = user[Object.keys(user)[6]];\n  const [form, setForm] = useState({\n    fullName: name,\n    password: password,\n    wardNumber: wardNumber,\n    gender: gender,\n    diagnoses: diagnoses,\n    treatment: treatment\n  });\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \" \\u0424\\u0418\\u041E\",\n    id: \"fullName\",\n    type: \"text\",\n    name: \"fullName\",\n    value: form.fullName,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    id: \"password\",\n    value: form.password,\n    type: \"password\",\n    name: \"password\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u043D\\u043E\\u043C\\u0435\\u0440 \\u043F\\u0430\\u043B\\u0430\\u0442\\u044B\",\n    value: form.wardNumber,\n    id: \"wardNumber\",\n    type: \"text\",\n    name: \"wardNumber\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"wardNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u043F\\u043E\\u043B \\u041C/\\u0416\",\n    value: form.gender,\n    id: \"gender\",\n    type: \"text\",\n    name: \"gender\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u0434\\u0438\\u0430\\u0433\\u043D\\u043E\\u0437\",\n    value: form.diagnoses,\n    id: \"diagnoses\",\n    type: \"text\",\n    name: \"diagnoses\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"diagnoses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u043B\\u0435\\u0447\\u0435\\u043D\\u0438\\u0435\",\n    value: form.treatment,\n    id: \"treatment\",\n    type: \"text\",\n    name: \"treatment\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"treatment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"waves-effect waves-light btn\",\n    disabled: loading //onClick = {handleClick}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/components/EditField.js"],"names":["React","useState","useRef","useHttp","EditField","user","loading","name","Object","keys","password","wardNumber","gender","diagnoses","treatment","form","setForm","fullName","changeHandler","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\n\r\nexport const EditField = ( { user } ) => {\r\n\r\n    const {loading} = useHttp()\r\n\r\n    const name = user[Object.keys(user)[1]]\r\n    const password = user[Object.keys(user)[2]]\r\n    const wardNumber = user[Object.keys(user)[3]]\r\n    const gender = user[Object.keys(user)[4]]\r\n    const diagnoses = user[Object.keys(user)[5]]\r\n    const treatment = user[Object.keys(user)[6]]\r\n\r\n\r\n    const [form,setForm] = useState({\r\n        fullName: name , password: password, wardNumber: wardNumber, gender: gender, diagnoses: diagnoses, treatment: treatment\r\n     })\r\n \r\n     const changeHandler = event => {\r\n     setForm({...form,[event.target.name]: event.target.value})\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"input-field\">\r\n                            <input\r\n                            placeholder=\" ФИО\"\r\n                            id=\"fullName\"                         \r\n                            type=\"text\"\r\n                            name=\"fullName\"\r\n                            value = {form.fullName}\r\n                            onChange = {changeHandler}\r\n                            />\r\n                            <label htmlFor=\"fullName\"></label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                            <input \r\n                            placeholder=\"Пароль\" \r\n                            id=\"password\" \r\n                            value = {form.password}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange = {changeHandler}\r\n                            />\r\n                            <label htmlFor=\"password\"></label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                            <input \r\n                            placeholder=\"номер палаты\" \r\n                            value = {form.wardNumber}\r\n                            id=\"wardNumber\" \r\n                            type=\"text\"\r\n                            name=\"wardNumber\"\r\n                            onChange = {changeHandler}\r\n                            />\r\n                            <label htmlFor=\"wardNumber\"></label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                            <input \r\n                            placeholder=\"пол М/Ж\" \r\n                            value = {form.gender}\r\n                            id=\"gender\" \r\n                            type=\"text\"\r\n                            name=\"gender\"\r\n                            onChange = {changeHandler}\r\n                            />\r\n                            <label htmlFor=\"gender\"></label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                            <input \r\n                            placeholder=\"диагноз\" \r\n                            value = {form.diagnoses}\r\n                            id=\"diagnoses\" \r\n                            type=\"text\"\r\n                            name=\"diagnoses\"\r\n                            onChange = {changeHandler}\r\n                            />\r\n                            <label htmlFor=\"diagnoses\"></label>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                            <input \r\n                            placeholder=\"лечение\" \r\n                            value = {form.treatment}\r\n                            id=\"treatment\" \r\n                            type=\"text\"\r\n                            name=\"treatment\"\r\n                            onChange = {changeHandler}\r\n                            />\r\n                            <label htmlFor=\"treatment\"></label>\r\n            </div>\r\n\r\n            <button className=\"waves-effect waves-light btn\"\r\n                                disabled = {loading}\r\n                                //onClick = {handleClick}\r\n                                >\r\n                                Изменить\r\n                                </button>\r\n\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
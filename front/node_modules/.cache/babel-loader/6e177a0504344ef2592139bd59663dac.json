{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\";\nimport { useHttp } from \"./http.hooks\";\nconst storageName = 'userData';\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [decoded, setDecoded] = useState('');\n  const {\n    request\n  } = useHttp();\n  const login = useCallback((jwtToken, id, data) => {\n    setToken(jwtToken);\n    setUserId(id);\n    setDecoded(data);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken // decoded:data\n\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setDecoded(null);\n    localStorage.removeItem(storageName);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      const temp = data.token;\n      const decoded = request('api/data/verify', 'POST', {\n        temp\n      });\n      login(data.token, data.userId, decoded);\n    }\n\n    setReady(true);\n  }, [login, request]);\n  return {\n    login,\n    logout,\n    token,\n    userId,\n    decoded,\n    ready\n  };\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","useHttp","storageName","useAuth","token","setToken","ready","setReady","userId","setUserId","decoded","setDecoded","request","login","jwtToken","id","data","localStorage","setItem","JSON","stringify","logout","removeItem","parse","getItem","temp"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,WAAW,GAAG,UAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAK;AACxB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACU,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAACc,IAAAA;AAAD,MAAYX,OAAO,EAAzB;AAEA,QAAMY,KAAK,GAAGd,WAAW,CAAE,CAACe,QAAD,EAAWC,EAAX,EAAeC,IAAf,KAAuB;AAC9CX,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACAL,IAAAA,SAAS,CAACM,EAAD,CAAT;AACAJ,IAAAA,UAAU,CAACK,IAAD,CAAV;AAGAC,IAAAA,YAAY,CAACC,OAAb,CAAqBhB,WAArB,EAAiCiB,IAAI,CAACC,SAAL,CAAe;AAC5CZ,MAAAA,MAAM,EAACO,EADqC;AAE5CX,MAAAA,KAAK,EAACU,QAFsC,CAG7C;;AAH6C,KAAf,CAAjC;AAKH,GAXwB,EAWvB,EAXuB,CAAzB;AAaA,QAAMO,MAAM,GAAGtB,WAAW,CAAE,MAAM;AAC9BM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,YAAY,CAACK,UAAb,CAAwBpB,WAAxB;AACH,GALyB,EAKxB,EALwB,CAA1B;AAOAF,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMgB,IAAI,GAAGG,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqBtB,WAArB,CAAX,CAAb;;AAEA,QAAIc,IAAI,IAAIA,IAAI,CAACZ,KAAjB,EAAuB;AAEnB,YAAMqB,IAAI,GAAGT,IAAI,CAACZ,KAAlB;AAEA,YAAMM,OAAO,GAAGE,OAAO,CAAC,iBAAD,EAAmB,MAAnB,EAA2B;AAACa,QAAAA;AAAD,OAA3B,CAAvB;AAEJZ,MAAAA,KAAK,CAACG,IAAI,CAACZ,KAAN,EAAaY,IAAI,CAACR,MAAlB,EAA0BE,OAA1B,CAAL;AACC;;AACDH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAZQ,EAYN,CAACM,KAAD,EAAOD,OAAP,CAZM,CAAT;AAcA,SAAO;AAACC,IAAAA,KAAD;AAAOQ,IAAAA,MAAP;AAAcjB,IAAAA,KAAd;AAAoBI,IAAAA,MAApB;AAA2BE,IAAAA,OAA3B;AAAmCJ,IAAAA;AAAnC,GAAP;AACH,CA1CM","sourcesContent":["import { useState, useCallback, useEffect} from \"react\"\r\nimport { useHttp } from \"./http.hooks\"\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () =>{\r\n    const [token,setToken] = useState(null)\r\n    const [ready,setReady] = useState(false)\r\n    const [userId,setUserId] = useState(null)\r\n    const [decoded,setDecoded] = useState('')\r\n    const {request} = useHttp()\r\n\r\n    const login = useCallback( (jwtToken, id, data) =>{\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        setDecoded(data)\r\n\r\n\r\n        localStorage.setItem(storageName,JSON.stringify({\r\n            userId:id,\r\n            token:jwtToken,\r\n           // decoded:data\r\n        }))\r\n    },[])\r\n\r\n    const logout = useCallback( () => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        setDecoded(null)\r\n        localStorage.removeItem(storageName)\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token){\r\n           \r\n            const temp = data.token\r\n\r\n            const decoded = request('api/data/verify','POST', {temp} ) \r\n            \r\n        login(data.token, data.userId, decoded)            \r\n        }\r\n        setReady(true)\r\n    }, [login,request])\r\n\r\n    return {login,logout,token,userId,decoded,ready}\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\pages\\\\AdminPage.js\";\nimport React, { useState, useContext, useCallback, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hooks';\nimport { NotificationList } from '../components/NotificationList.js';\nimport useSound from 'use-sound';\nimport notifySound from '../sounds/notify.mp3';\nexport const AdminPage = () => {\n  const [notification, setNotification] = useState(null);\n  const auth = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const [sound] = useSound(notifySound);\n  const getNofitication = useCallback(async () => {\n    try {\n      const data = await request(`/api/data/getNotifications`, 'GET', null, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      setNotification(data);\n    } catch (e) {}\n  }, [auth.token, request]);\n  useEffect(() => {\n    getNofitication();\n    const interval = setInterval(getNofitication, 3000);\n    return () => clearInterval(interval);\n  }, [getNofitication]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, notification && /*#__PURE__*/React.createElement(NotificationList, {\n    notifications: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/pages/AdminPage.js"],"names":["React","useState","useContext","useCallback","useEffect","AuthContext","useHttp","NotificationList","useSound","notifySound","AdminPage","notification","setNotification","auth","request","sound","getNofitication","data","Authorization","token","e","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMY,IAAI,GAAGX,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM;AAACS,IAAAA;AAAD,MAAYR,OAAO,EAAzB;AACA,QAAM,CAACS,KAAD,IAAUP,QAAQ,CAACC,WAAD,CAAxB;AAEA,QAAMO,eAAe,GAAGb,WAAW,CAAE,YAAY;AAC/C,QAAG;AAED,YAAMc,IAAI,GAAG,MAAMH,OAAO,CAAE,4BAAF,EAA8B,KAA9B,EAAoC,IAApC,EAAyC;AAC7DI,QAAAA,aAAa,EAAG,UAASL,IAAI,CAACM,KAAM;AADyB,OAAzC,CAA1B;AAIEP,MAAAA,eAAe,CAACK,IAAD,CAAf;AAEH,KARD,CAQC,OAAMG,CAAN,EAAQ,CACR;AAEJ,GAZoC,EAYlC,CAACP,IAAI,CAACM,KAAN,EAAYL,OAAZ,CAZkC,CAAnC;AAeFV,EAAAA,SAAS,CAAE,MAAM;AAEfY,IAAAA,eAAe;AAEf,UAAMK,QAAQ,GAAGC,WAAW,CAACN,eAAD,EAAiB,IAAjB,CAA5B;AAEA,WAAO,MAAMO,aAAa,CAACF,QAAD,CAA1B;AAED,GARQ,EAQN,CAACL,eAAD,CARM,CAAT;AAWE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,YAAY,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAIA,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADF;AAKD,CAvCM","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from 'react';\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks';\r\nimport { NotificationList } from '../components/NotificationList.js'\r\nimport useSound from 'use-sound'\r\nimport notifySound from '../sounds/notify.mp3'\r\n\r\nexport const AdminPage = () => {\r\n\r\n  const [notification, setNotification] = useState(null)  \r\n\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  const [sound] = useSound(notifySound);\r\n\r\n  const getNofitication = useCallback( async () => {\r\n    try{\r\n\r\n      const data = await request(`/api/data/getNotifications`,'GET',null,{ \r\n            Authorization: `Bearer ${auth.token}`\r\n        })\r\n\r\n        setNotification(data)\r\n\r\n    }catch(e){\r\n    }\r\n  \r\n}, [auth.token,request])\r\n\r\n\r\nuseEffect( () => {\r\n\r\n  getNofitication()\r\n\r\n  const interval = setInterval(getNofitication,3000)\r\n\r\n  return () => clearInterval(interval)\r\n\r\n}, [getNofitication])  \r\n\r\n\r\n  return(\r\n    <div>\r\n    { notification && <NotificationList notifications = {notification} />}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
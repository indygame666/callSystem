{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\pages\\\\AdminPage.js\";\nimport React, { useState, useContext, useCallback, useEffect } from 'react';\nimport { useMessage } from '../hooks/message.hooks';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hooks';\nimport { NotificationList } from '../components/NotificationList.js';\nimport { Loader } from '../components/Loader';\nexport const AdminPage = () => {\n  const [notification, setNotification] = useState(null);\n  const message = useMessage();\n  const auth = useContext(AuthContext);\n  const {\n    loading,\n    request\n  } = useHttp();\n  const getNofitication = useCallback(async () => {\n    try {\n      if (auth.token == null) {\n        clearInterval(getNofitication);\n        return null;\n      }\n\n      const data = await request(`/api/admin/getNotifications`, 'GET', null, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      setNotification(data);\n    } catch (e) {}\n  }, [auth.token, request]);\n  /*const getUpdate = useCallback( async () => {\r\n    try{\r\n      const data = await request(`/api/admin/update`,'GET',null,{ \r\n            Authorization: `Bearer ${auth.token}`\r\n        })\r\n  \r\n        setNotification(data)\r\n  \r\n    }catch(e){\r\n    }\r\n  \r\n  }, [auth.token,request]) */\n\n  useEffect(() => {//setInterval(getNofitication\n    // , 3000);\n  }, [auth, getNofitication]);\n  /*\r\n  if (loading)\r\n      {\r\n          return <Loader/>\r\n      }\r\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, notification && /*#__PURE__*/React.createElement(NotificationList, {\n    notifications: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/pages/AdminPage.js"],"names":["React","useState","useContext","useCallback","useEffect","useMessage","AuthContext","useHttp","NotificationList","Loader","AdminPage","notification","setNotification","message","auth","loading","request","getNofitication","token","clearInterval","data","Authorization","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAAQC,MAAR,QAAqB,sBAArB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMY,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAMS,IAAI,GAAGZ,UAAU,CAACI,WAAD,CAAvB;AACA,QAAM;AAACS,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBT,OAAO,EAAlC;AAEA,QAAMU,eAAe,GAAGd,WAAW,CAAE,YAAY;AAC/C,QAAG;AAED,UAAIW,IAAI,CAACI,KAAL,IAAc,IAAlB,EACA;AACEC,QAAAA,aAAa,CAACF,eAAD,CAAb;AACA,eAAO,IAAP;AACD;;AAED,YAAMG,IAAI,GAAG,MAAMJ,OAAO,CAAE,6BAAF,EAA+B,KAA/B,EAAqC,IAArC,EAA0C;AAC9DK,QAAAA,aAAa,EAAG,UAASP,IAAI,CAACI,KAAM;AAD0B,OAA1C,CAA1B;AAIEN,MAAAA,eAAe,CAACQ,IAAD,CAAf;AAEH,KAdD,CAcC,OAAME,CAAN,EAAQ,CACR;AAEJ,GAlBoC,EAkBlC,CAACR,IAAI,CAACI,KAAN,EAAYF,OAAZ,CAlBkC,CAAnC;AAoBF;;;;;;;;;;;;;AAcAZ,EAAAA,SAAS,CAAE,MAAM,CAEf;AACF;AAEC,GALQ,EAKN,CAACU,IAAD,EAAMG,eAAN,CALM,CAAT;AAOA;;;;;;;AAOE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,YAAY,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAIA,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADF;AAKD,CA7DM","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from 'react';\r\nimport { useMessage } from '../hooks/message.hooks';\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks';\r\nimport { NotificationList } from '../components/NotificationList.js'\r\nimport {Loader} from '../components/Loader'\r\n\r\n\r\nexport const AdminPage = () => {\r\n\r\n  const [notification, setNotification] = useState(null)  \r\n  const message = useMessage()\r\n  \r\n  const auth = useContext(AuthContext)\r\n  const {loading, request} = useHttp() \r\n\r\n  const getNofitication = useCallback( async () => {\r\n    try{\r\n      \r\n      if (auth.token == null)\r\n      {\r\n        clearInterval(getNofitication)\r\n        return(null)\r\n      }\r\n\r\n      const data = await request(`/api/admin/getNotifications`,'GET',null,{ \r\n            Authorization: `Bearer ${auth.token}`\r\n        })\r\n\r\n        setNotification(data)\r\n\r\n    }catch(e){\r\n    }\r\n  \r\n}, [auth.token,request])\r\n\r\n/*const getUpdate = useCallback( async () => {\r\n  try{\r\n    const data = await request(`/api/admin/update`,'GET',null,{ \r\n          Authorization: `Bearer ${auth.token}`\r\n      })\r\n\r\n      setNotification(data)\r\n\r\n  }catch(e){\r\n  }\r\n\r\n}, [auth.token,request]) */\r\n\r\n\r\nuseEffect( () => {\r\n\r\n  //setInterval(getNofitication\r\n// , 3000);\r\n\r\n}, [auth,getNofitication])  \r\n\r\n/*\r\nif (loading)\r\n    {\r\n        return <Loader/>\r\n    }\r\n*/\r\n\r\n  return(\r\n    <div>\r\n    { notification && <NotificationList notifications = {notification} />}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
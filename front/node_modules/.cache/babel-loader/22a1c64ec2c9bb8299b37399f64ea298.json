{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\pages\\\\AdminPage.js\";\nimport React, { useState, useContext, useCallback, useEffect } from 'react';\nimport { useMessage } from '../hooks/message.hooks';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hooks';\nimport { NotificationList } from '../components/NotificationList.js';\nimport { Loader } from '../components/Loader';\nexport const AdminPage = () => {\n  const [notification, setNotification] = useState(null); //  const message = useMessage()\n\n  const auth = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const getNofitication = useCallback(async () => {\n    try {\n      const data = await request(`/api/admin/getNotifications`, 'GET', null, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      setNotification(data);\n    } catch (e) {}\n  }, [auth.token, request]);\n  /*const getUpdate = useCallback( async () => {\r\n    try{\r\n      const data = await request(`/api/admin/update`,'GET',null,{ \r\n            Authorization: `Bearer ${auth.token}`\r\n        })\r\n  \r\n        setNotification(data)\r\n  \r\n    }catch(e){\r\n    }\r\n  \r\n  }, [auth.token,request]) */\n\n  useEffect(() => {\n    getNofitication();\n    const interval = setInterval(getNofitication, 3000);\n    return () => clearInterval(interval);\n  }, [getNofitication]);\n  /*\r\n  if (loading)\r\n      {\r\n          return <Loader/>\r\n      }\r\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, notification && /*#__PURE__*/React.createElement(NotificationList, {\n    notifications: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/pages/AdminPage.js"],"names":["React","useState","useContext","useCallback","useEffect","useMessage","AuthContext","useHttp","NotificationList","Loader","AdminPage","notification","setNotification","auth","request","getNofitication","data","Authorization","token","e","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAAQC,MAAR,QAAqB,sBAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD,CAF6B,CAG/B;;AAEE,QAAMY,IAAI,GAAGX,UAAU,CAACI,WAAD,CAAvB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAYP,OAAO,EAAzB;AAEA,QAAMQ,eAAe,GAAGZ,WAAW,CAAE,YAAY;AAC/C,QAAG;AAED,YAAMa,IAAI,GAAG,MAAMF,OAAO,CAAE,6BAAF,EAA+B,KAA/B,EAAqC,IAArC,EAA0C;AAC9DG,QAAAA,aAAa,EAAG,UAASJ,IAAI,CAACK,KAAM;AAD0B,OAA1C,CAA1B;AAIEN,MAAAA,eAAe,CAACI,IAAD,CAAf;AAEH,KARD,CAQC,OAAMG,CAAN,EAAQ,CACR;AAEJ,GAZoC,EAYlC,CAACN,IAAI,CAACK,KAAN,EAAYJ,OAAZ,CAZkC,CAAnC;AAeF;;;;;;;;;;;;;AAcAV,EAAAA,SAAS,CAAE,MAAM;AAEfW,IAAAA,eAAe;AAEf,UAAMK,QAAQ,GAAGC,WAAW,CAACN,eAAD,EAAiB,IAAjB,CAA5B;AAEA,WAAO,MAAMO,aAAa,CAACF,QAAD,CAA1B;AAED,GARQ,EAQN,CAACL,eAAD,CARM,CAAT;AAUA;;;;;;;AAOE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,YAAY,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAIA,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADF;AAKD,CA3DM","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from 'react';\r\nimport { useMessage } from '../hooks/message.hooks';\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hooks';\r\nimport { NotificationList } from '../components/NotificationList.js'\r\nimport {Loader} from '../components/Loader'\r\n\r\nexport const AdminPage = () => {\r\n\r\n  const [notification, setNotification] = useState(null)  \r\n//  const message = useMessage()\r\n  \r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp() \r\n\r\n  const getNofitication = useCallback( async () => {\r\n    try{\r\n\r\n      const data = await request(`/api/admin/getNotifications`,'GET',null,{ \r\n            Authorization: `Bearer ${auth.token}`\r\n        })\r\n\r\n        setNotification(data)\r\n\r\n    }catch(e){\r\n    }\r\n  \r\n}, [auth.token,request])\r\n\r\n\r\n/*const getUpdate = useCallback( async () => {\r\n  try{\r\n    const data = await request(`/api/admin/update`,'GET',null,{ \r\n          Authorization: `Bearer ${auth.token}`\r\n      })\r\n\r\n      setNotification(data)\r\n\r\n  }catch(e){\r\n  }\r\n\r\n}, [auth.token,request]) */\r\n\r\n\r\nuseEffect( () => {\r\n\r\n  getNofitication()\r\n\r\n  const interval = setInterval(getNofitication,3000)\r\n\r\n  return () => clearInterval(interval)\r\n\r\n}, [getNofitication])  \r\n\r\n/*\r\nif (loading)\r\n    {\r\n        return <Loader/>\r\n    }\r\n*/\r\n\r\n  return(\r\n    <div>\r\n    { notification && <NotificationList notifications = {notification} />}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
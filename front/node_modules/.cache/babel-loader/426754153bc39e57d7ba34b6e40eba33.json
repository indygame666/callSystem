{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirill\\\\Desktop\\\\HSE\\\\callSystem\\\\front\\\\src\\\\pages\\\\DetailPage.js\";\nimport React, { useState, useContext, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hooks';\nimport { AuthContext } from '../context/AuthContext';\nimport { Loader } from '../components/Loader';\nimport { NotificationCard } from '../components/NotificationCard';\nexport const DetailPage = () => {\n  const auth = useContext(AuthContext);\n  const [Notification, setNotification] = useState();\n  const {\n    loading,\n    request\n  } = useHttp();\n  const id = useParams().id;\n  const getData = useCallback(async () => {\n    try {\n      const data = await request(`/api/data/getNotification/${id}`, 'GET', null, {\n        Authorization: `Bearer ${auth.token}`\n      });\n      setNotification(data);\n    } catch (e) {}\n  }, [auth.token, request, id]);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, !loading && Notification && /*#__PURE__*/React.createElement(NotificationCard, {\n    notification: Notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 39\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Kirill/Desktop/HSE/callSystem/front/src/pages/DetailPage.js"],"names":["React","useState","useContext","useCallback","useEffect","useParams","useHttp","AuthContext","Loader","NotificationCard","DetailPage","auth","Notification","setNotification","loading","request","id","getData","data","Authorization","token","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,gBAAT,QAAgC,gCAAhC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAE5B,QAAMC,IAAI,GAAGT,UAAU,CAACK,WAAD,CAAvB;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;AACA,QAAM;AAACa,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAoBT,OAAO,EAAjC;AAEA,QAAMU,EAAE,GAAGX,SAAS,GAAGW,EAAvB;AAEA,QAAMC,OAAO,GAAGd,WAAW,CAAE,YAAY;AACrC,QAAG;AAEC,YAAMe,IAAI,GAAG,MAAMH,OAAO,CAAE,6BAA4BC,EAAG,EAAjC,EAAmC,KAAnC,EAAyC,IAAzC,EAA8C;AACpEG,QAAAA,aAAa,EAAG,UAASR,IAAI,CAACS,KAAM;AADgC,OAA9C,CAA1B;AAIAP,MAAAA,eAAe,CAACK,IAAD,CAAf;AAEH,KARD,CAQC,OAAMG,CAAN,EAAQ,CACR;AAEJ,GAZ0B,EAYxB,CAACV,IAAI,CAACS,KAAN,EAAYL,OAAZ,EAAqBC,EAArB,CAZwB,CAA3B;AAcAZ,EAAAA,SAAS,CAAE,MAAM;AAEba,IAAAA,OAAO;AAEV,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;;AAMA,MAAIH,OAAJ,EACA;AACI,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACA,OAAD,IAAYF,YAAZ,iBAA4B,oBAAC,gBAAD;AAAkB,IAAA,YAAY,EAAGA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,CADJ;AAMH,CAzCM","sourcesContent":["import React, { useState, useContext, useCallback, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { Loader } from '../components/Loader'\r\nimport { NotificationCard} from '../components/NotificationCard'\r\n\r\nexport const DetailPage = () => {\r\n\r\n    const auth = useContext(AuthContext)\r\n    const [Notification, setNotification] = useState()\r\n    const {loading,request} = useHttp()\r\n\r\n    const id = useParams().id\r\n\r\n    const getData = useCallback( async () => {\r\n        try{\r\n          \r\n            const data = await request(`/api/data/getNotification/${id}`,'GET',null,{ \r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            \r\n            setNotification(data)\r\n\r\n        }catch(e){\r\n        }\r\n      \r\n    }, [auth.token,request, id])\r\n\r\n    useEffect( () => {\r\n        \r\n        getData()\r\n        \r\n    }, [getData])  \r\n\r\n    if (loading)\r\n    {\r\n        return (\r\n            <Loader/>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        { !loading && Notification && <NotificationCard notification= {Notification} />}\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}